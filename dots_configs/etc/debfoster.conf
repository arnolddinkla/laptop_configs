# InstallCmd = apt-get install
# Command invoked with a number of packages on the command line.
# The command is not passed to /bin/sh but invoked like xargs(1)
# with a number of packages as extra options.

# RemoveCmd = apt-get --purge remove
# Like InstallCmd but for removing packages.

# InfoCmd = dpkg -s
# Like InstallCmd but called with a single package as an argument
# to display information on.

# KeeperFile = /var/lib/debfoster/keepers
# The file where the list of orphans is stored.  You can use this
# file for reference when installing a machine or even to make
# identical Debian installs.

# DpkgStatus = /var/lib/dpkg/status
# The file where dpkg(8) stores its information about which pack-
# ages are more or less installed.  This value can usually be left
# untouched.

# DpkgAvailable = /var/lib/dpkg/available
# The file where dpkg(8) stores its information about which pack-
# ages are available.  This value can usually be left untouched.

# MaxPriority = standard
# Any packages with a priority greater than this value will be con-
# sidered too basic to ask questions about. With the special value
# `ANY' you can indicate that all known priorities should be con-
# sidered too important to ask questions about.
# Possible values: required, important, standard, optional, extra.

# UseHold = yes
# Use the hold attribute from the Status: line.  Packages with this
# attribute won't ever be upgraded by apt, so it's safe to assume
# that you want to keep it.

# UseEssential = yes
# Use the Essential: line from dpkg(8)'s  status file.  Most pack-
# ages which are marked essential shouldn't be removed anyway, so
# if you don't want to be bothered with it, enable this option.

# UsePreDepends = yes
# A package that pre-depends on another package requires the latter
# during installation.  This option will make debfoster count these
# pre-dependencies as ordinary dependencies.  If you frequently up-
# date your packages you may want to keep an eye out for pre-de-
# pended packages that have become obsolete.

# UseRecommends = yes
# Recommended packages would be installed together with the package
# that recommends them in all usual setups.  This option will make
# debfoster count these recommendations as real dependencies.  En-
# abling this option will enable you to better manage packages
# which were installed because another package recommended them.

# UseSuggests = no
# Packages suggested by another package usually enhance the func-
# tion of the latter or have a related function which may be useful
# in combination with the package that suggested them.  This option
# will make debfoster count these suggestions as real dependencies.
# Using this option will result in even fewer questions being asked.

# UseTasks = no
# Make tasks visible as packages. This will make tasks that are
# selectable using tasksel(1) appear as packages named
# task-<label>.  debfoster will treat them as if they were normal
# packages. Tasks cannot be removed but marking a task for removal
# will stop debfoster asking questions about it.

# KeepSections =
# NokeepSections =
# All debian packages are assigned to a section like libs, utils,
# contrib/games, etc. If you want to have the same default handling
# for all packages in a particular section, you can add it to either
# the KeepSections or the NokeepSections list. Note that the first
# part in a two-part section name, e.g. "contrib/xxx", is not matched.
#
# For example, if you want to keep all games and sounds packages by
# default and delete everything to do with science, you can add the
# following lines:
#	KeepSections = games, sounds
#	NokeepSections = science
#
# A perhaps more useful example for cleaning up unused libraries is:
#	NokeepSections = libs, oldlibs
#
# Note that a package can only be deleted if no other package depends
# on it and no other rule causes it to be kept, regardless of the
# NokeepSections setting.

# GuessDepends =
# Larger applications are often separated in to multiple packages
# and named with names like xyzzy, xyzzy-doc, xyzzy-dev. If you
# don't want to answer questions about xyzzy-extension, you can add
# the extension to the GuessDepends list. In this case, debfoster
# will keep the extension package if the base package is kept.
# Otherwise it will be deleted (assuming it has no dependents).
# For example:
#	GuessDepends = dev, doc

# NegativeKeepers = no
# Debfoster remembers packages that are explictly added or removed.
# Sometimes system administrators install certain packages temporarily,
# and don't want them to be removed automatically each time debfoster
# is run. Setting this option to `no' makes debfoster ignore negative
# entries in the keeper file.

# Verbose = no
# Using this option has the same result as having -v on the command
# line.  It will make debfoster show which packages have disap-
# peared or have become a dependency.

# Force = no
# Corresponds to the -f command line option: preempts questions and
# answers them with `No'. Additionally, packages that are on the
# debfoster list but are not currently installed will be installed.

# Quiet = no
# Having this option (which has the same meaning as the -q command
# line argument) in your configuration file more or less defeats
# the purpose of debfoster although the KeeperFile is still kept
# up-to-date. All packages will be kept without asking questions.
